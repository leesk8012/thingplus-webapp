# Gitlab CI

before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  #- echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - touch ~/.ssh/id_rsa
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  - chmod 700 ~/.ssh/id_rsa

  ##
  ## Optionally, if you will be using any Git commands, set the user name and
  ## and email.
  ##
  #- git config --global user.email "user@example.com"
  #- git config --global user.name "User name"

stages:
  - build
  - test
  - deploy

job-build:
  stage: build
  script:
    - npm install
    - ls
    - cd server;ls
    - cd lib;ls
    - cd ../../ui-server;ls
job-test:
  stage: test
  script: 
    - echo 'job-test'
    - ls
    - pwd

job-deploy:
  stage: deploy
  script: echo 'job-deploy'

after_script:
  - echo 'global after script'
  - whoami
  - pwd
  - ssh -i ~/.ssh/id_rsa $ACCOUNT@$XMDBHOST ls